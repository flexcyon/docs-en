# name: Deploy translation branches

# on: push

# jobs:
#   deploy-translation:
#     name: Deploy translation to ${{ matrix.target_branch }}
#     runs-on: ubuntu-latest
#     strategy:
#       matrix:
#         include:
#           - src_folder: 'translation-es'
#             target_branch: 'es'
#           - src_folder: 'translation-zh'
#             target_branch: 'zh-cn'
#     steps:
#       - uses: actions/checkout@v2
#         with:
#           fetch-depth: 0
#           ref: master

#       - name: Get GitHub App installation token
#         id: app-token
#         uses: actions/create-github-app-token@v2.0.6
#         with:
#           app-id: ${{ secrets.GH_APP_ID }}
#           private-key: ${{ secrets.GH_APP_PRIVATE_KEY }}

#       - name: Copy site-reqs.txt as requirements.txt to docs and translation folders and remove libretranslate deps
#         shell: bash
#         run: |
#           cp site-reqs.txt docs/requirements.txt 
#           cp site-reqs.txt translation-es/requirements.txt || true
#           cp site-reqs.txt translation-zh/requirements.txt || true
        
#       - name: Commit and push docs/requirements.txt to master branch
#         if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main'
#         shell: bash
#         env:
#           GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#         run: |
#           git config --global user.name 'github-actions[bot]'
#           git config --global user.email 'github-actions[bot]@users.noreply.github.com'
#           git add docs/requirements.txt
#           git diff-index --quiet HEAD || git commit -m "Update docs/requirements.txt from site-reqs.txt [bot]"
#           git push --force https://x-access-token:${GH_TOKEN}@github.com/${GITHUB_REPOSITORY}.git master

#       - name: Prepare ${{ matrix.target_branch }} branch
#         shell: bash
#         env:
#           SRC_FOLDER_PATH: ${{ matrix.src_folder }}
#           TARGET_BRANCH: ${{ matrix.target_branch }}
#           GH_TOKEN: ${{ steps.app-token.outputs.token }}
#         run: |
#           if [ ! -d "$SRC_FOLDER_PATH" ]; then
#             echo "Source folder $SRC_FOLDER_PATH does not exist, skipping deployment for $TARGET_BRANCH."
#             exit 0
#           fi
#           # Copy translation folder to temp before switching branches
#           cp -r $SRC_FOLDER_PATH /tmp/translation_tmp
#           git fetch origin $TARGET_BRANCH || true
#           if git show-ref --quiet refs/heads/$TARGET_BRANCH; then
#             git checkout $TARGET_BRANCH
#           else
#             git checkout --orphan $TARGET_BRANCH
#             git reset --hard
#           fi
#           rm -rf docs README.md mkdocs.yml requirements.txt assets changelogs credits README Styling .readthedocs.yml translation-es translation-zh || true
#           cp -r /tmp/translation_tmp docs
#           if [ -f /tmp/translation_tmp/README.md ]; then cp /tmp/translation_tmp/README.md ./README.md; fi
#           # Move .readthedocs.yml from docs/ to root if it exists
#           if [ -f ./docs/.readthedocs.yaml ]; then cp ./docs/.readthedocs.yaml ./.readthedocs.yaml; fi
#           if [ -f ./docs/mkdocs.yml ]; then cp ./docs/mkdocs.yml ./mkdocs.yml; fi
#           git config --global user.name 'github-actions[bot]'
#           git config --global user.email 'github-actions[bot]@users.noreply.github.com'
#           git add -A
#           git diff-index --quiet HEAD || git commit -am "Deploy translated files to $TARGET_BRANCH branch"
#           git push --force https://x-access-token:${GH_TOKEN}@github.com/${GITHUB_REPOSITORY}.git $TARGET_BRANCH
